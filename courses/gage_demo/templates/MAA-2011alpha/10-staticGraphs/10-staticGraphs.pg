####	10-staticGraphs.pg
# DESCRIPTION
#	function given by graph: match transforms with their graphs
# ENDDESCRIPTION

## DBsubject('WeBWorK')
## DBchapter('WeBWorK Tutorial')
## DBsection('MAA Tutorial')
## KEYWORDS('MathObjects','match','static graph')
## Author('Mike Gage, Dick Lane')
## Institution('U Rochester, U Montana')
## Date('05/18/2011)
## SeeAlso('http://webwork.maa.org/wiki/MatchingStaticGraphs')

DOCUMENT();

loadMacros(
	"PGstandard.pl",
	"PGunion.pl",		####	loads unionTables.pl
	"imageChoice.pl",
	"PGcourse.pl",
);

TEXT(beginproblem());

####	title for this example
TEXT($BBOLD, $BCENTER,
	"Static Graphics --- Matching", $ECENTER, $EBOLD, $BR );

$refreshCachedImages = 1 ;	##  perhaps needed if problem re-randomized


# The base pictures are labeled 1.png, 2.png and 3.png;
# the following lists are for the corresponding transformed pictures.
# The PG problem file, and all associated graphics, are stored together
# --- the Library Browser presumes folder ABC has ABC.pg and its art.
# Be careful with the labeling, since URL's could disclose correct answers.
# (In this example the middle integer identifies the correct transformation.)

$pictID[1] = [
	"1-31126.png",  # "\( F(x+3)\)",
	"1-76239.png",  # "\(F(x-3) \)" ,
	"1-96355.png",  # "\( -F(-x)\)",
	"1-24438.png",  # "\( F(-x) \)",
	"1-89540.png",  # "\( 5F(x) \)",
	"1-42639.png",  # "\( F(3x) \)" ,
	"1-91734.png",  # "\( F(x/3) \)",
	"1-34859.png",  # "\( F(x^2) \)",
];

$pictID[2] = [
	"2-70190.png",  # ditto
	"2-49261.png",
	"2-62384.png",	####	png was 0 bytes, gif has wrong graph
	"2-54427.png",
	"2-64591.png",
	"2-42653.png",
	"2-81779.png",
	"2-92879.png",
];

$pictID[3] = [
	"3-14197.png",
	"3-89262.png",
	"3-99389.png",
	"3-68458.png",
	"3-14538.png",
	"3-37616.png",
	"3-46739.png",
	"3-52898.png",
];


####	choose one of the picture sets
$pictSet=random(1,3,2);
  ## 2011-05-18: set 2 is skipped because one of its PNG files has wrong graph

####	graph of the base function ("." is Perl's string concatenation op)
$pictSetname  =  $pictSet . ".png" ;

####	list of the transformations (LaTeX typographic markup)
@FCN = ( "\( F(x+3)\) ", "\(F(x-3) \)", "\( -F(-x)\) ", "\( F(-x) \)",
	"\( 5 \, F(x) \)", "\( F(3 \, x) \)", "\( F(x/3) \)", "\( F(x^2) \)" ) ;

####	zip the function list with chosen collection of transformed images
@QA = () ;
foreach my $j (0 .. 7) {
	push( @QA , $FCN[$j] , $pictID[$pictSet][$j] ) ;
 } ;


$shrink = 0.8 ;	## used below, tinker with this to avoid going beyond 1 screen

####	create the Image Match List --- put stuff into it
$ML = new_image_match_list(
	link => 1 ,
	size => [ 238 * $shrink , 197 * $shrink ] ,
	tex_size => 300 ,
	columns => 2 ,
	separation => 20 ,
) ;

$ML -> qa( @QA ) ;		####	function is question, graph is answer
$ML -> choose(3) ;		####	random selection of three pairs
$ML -> choose_extra(1) ;	####	include another graph as a distractor


BEGIN_TEXT
	The first graph shows function \( F(x) \).
$BCENTER
	\{ image($pictSetname, width=>238, height=>197, tex_size=>300) \}
$ECENTER
	Match each transformation (listed on the left) of  \( F \)
	with one of the following graphs (shown on the right).
	\{ ColumnMatchTable( $ML ) \}
END_TEXT


####	suppress feedback about which parts are correct and which are wrong
$showPartialCorrectAnswers = 0 ;

####	use the all-or-nothing grader, i.e., no partial credit
####		http://webwork.maa.org/wiki/WeightedGrader
install_problem_grader( ~~&std_problem_grader ) ;

ANS(  str_cmp( $ML ->ra_correct_ans()   ) ) ;

ENDDOCUMENT();
