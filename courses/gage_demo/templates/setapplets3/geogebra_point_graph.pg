##DESCRIPTION
##  Algebra problem: identify the inflection point of a cubic graph
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Precalculus')
## DBchapter('')
## DBsection('')
## Date('3/01/2008')
## Author('Michael Gage')
## Institution('U. of Rochester')
## TitleText1('Precalculus')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

########################################################################

DOCUMENT();

# Load whatever macros you need for the problem
loadMacros(        "PGstandard.pl",
		   "MathObjects.pl",
		   "parserSolutionFor.pl",
		   "AppletObjects.pl",
		   "source.pl",
		   #"PGasu.pl",
		  );

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Do not show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 0;

##############################################################
#
#  Setup
#
#
Context("Point");

$a = random(1,5,1);
$b = random(-3,3,1);

$answer_point = Compute("($a, $b)");


###################################
# Create  link to applet 
###################################
$appletName = "GeogebraPointGraph";
$applet =  JavaApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase   => 'http://hosted2.webwork.rochester.edu/webwork2_files/applets/geogebra_stable/',
   appletName => $appletName,
   appletId   => $appletName,
   submitActionAlias     => 'getXML',  # default actionAlias
   initializeActionAlias => 'setXML',  # default actionAlias
   setStateAlias         => 'setXML',
   getStateAlias         => 'getXML',
   answerBoxAlias        => 'receivedField',
   width => 500,
   height => 250,
   debug =>1,
   params => {     filename=>"http://hosted2.webwork.rochester.edu/webwork2_files/applets/quadratictest.ggb",
               framePossible => "false",
               showAlgebraInput => "false",
               language         => "en",
               country          => "",
               enableRightClick => "false",
               enableShiftDragZoom =>"false",
               showMenuBar      => "false",
               showResetIcon    => "false",
              showToolBar        => "true",
             customToolBar    =>"0 | 1 | 6 ",
   },
   
   
);

HEADER_TEXT(<<EOF);
<script language="JavaScript">
function draw() {

alert("draw function");
// getApplet("$appletName").evalCommand("input1(x) = Polynomial[" + getQE('textfield').value + "]");
getApplet("$appletName").evalCommand("input1(x) = Function[" + getQE('textfield').value + ",-8,5]");

getApplet("$appletName").setVisible("input1", true);
}

function simplify() {
alert("simplify expression");
var output = "foo";
output =  getApplet("$appletName").evalYacas(getQE('textfield2').value) ;

getQE('textfield3').value = output;
}

</script>
EOF

###################################
# Configure applet
###################################

#data to set up the equation

 $applet->configuration(qq{
<?xml version="1.0" encoding="utf-8"?> 
<geogebra format="3.02"> 
<gui> <show algebraView="false" spreadsheetView="false" auxiliaryObjects="false" algebraInput="false" cmdList="true"/> <font size="16"/> 
</gui> 
<euclidianView> <size width="498" height="195"/> 
<coordSystem xZero="215.0" yZero="315.0" scale="50.0" yscale="50.0"/> 
<evSettings axes="true" grid="true" gridIsBold="false" pointCapturing="3" pointStyle="0" rightAngleStyle="1" checkboxSize="13" gridType="0"/> 
<bgColor r="255" g="255" b="255"/> <axesColor r="0" g="0" b="0"/> 
<gridColor r="192" g="192" b="192"/> 
<lineStyle axes="1" grid="10"/> 
<axis id="0" show="true" label="" unitLabel="" tickStyle="1" showNumbers="true"/> 
<axis id="1" show="true" label="" unitLabel="" tickStyle="1" showNumbers="true"/> 
</euclidianView> 

<kernel> <continuous val="false"/> <decimals val="2"/> <angleUnit val="degree"/> <coordStyle val="0"/> </kernel> 
<construction title="" author="" date="">  </construction> 

</geogebra>
});


# initial points
#  $applet->initialState(qq{<XML> <pt xval=0, yval=0/></XML>});
###################################
#insert applet into body
###################################

TEXT( MODES(TeX=>'object code', HTML=>$applet->insertAll(
 debug=>1,
reinitialize_button=>1,
 )));

#TEXT( $applet->insertAll(   debug=>0,      reset_button=>0,   ));

##########
# the debug mode allows you to view the contents of the XML
##########
#TEXT( MODES(TeX=>'object code', HTML=>$applet->insertAll(debug=>0 reset_button=>1)));##
##############################################################
#
#  Text
#
#

BEGIN_TEXT

$PAR
Drag the point to the inflection point of the given curve.
$BR
$BR
Click this to have applet send data to the input field below:
$BR
                 
\{ MODES(HTML=>qq!<input type="button" value="Send" onClick="getQE('answerBox').value = getApplet('$appletName'). getAnswer()"/>!, TeX=>'getAnswer button')\}
$BR

\{labeled_ans_rule('answerBox',40)\}
$PAR
This button revert back to the last saved state.
$BR
\{ MODES(HTML=>qq!<input type="button" value="revert" onClick="initializeWWquestion()"/>!, TeX=>'test button')\}

$PAR

The main purpose of this question is to illustrate a method by which the state of the applet is preserved from one viewing of the question
to the next.

END_TEXT



##############################################################
#
#  Answers
#
#

NAMED_ANS('answerBox'=>$answer_point->with(tolType=>"absolute",tolerance=>.05)->cmp);


# relative tolerance --3.1412 is incorrect but 3.1413 is correct
# default tolerance is .01 or one percent.

##############################################################
# This item will list all of the HTML elements in the question
# which can be addressed using getQE().  It can be useful for 
# initial design and for debugging
#

#TEXT(qq!<script> listQuestionElements(); </script>!);


ENDDOCUMENT();     
