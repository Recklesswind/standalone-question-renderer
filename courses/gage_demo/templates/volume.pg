##  Sage Homework Problem File for
##  Calculus
##  Multiple Integrals
##  Unit 3
##
## Author("John Travis")
## Institution("Mississippi College")
## Subject("Calculus")
## Chapter("Multiple Integrals")
## Topic("Volumes") 

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
);

Context()->strings->add(none=>{});
Context()->variables->add(y=>"Real",z=>"Real");

TEXT(beginproblem());

#  This problem is not yet randomized.
$volume = 891/20;

####### Here is where special coding for Sage starts  ########
TEXT(<<'EOF');


<div id="singlecell-test">
<script type="text/code">
 
#########  Actual Sage code pasted starting here ##########
#########  This code should work in regular Sage ##########

html('<h3 align="middle">Enter the endpoints of integration and select the appropriate order of integration for $dV$.</h3>')

html('<h2 align="middle">$ \int_{a_1}^{a_2} \int_{b_1}^{b_2} \int_{c_1}^{c_2} dV $</h2>')

print '\nFor now, enter a lone constant as constant*x in the second or third set of constraints.'
var('x,y,z,t,u,integ')
global integ 

dV = 'dz dy dx'

   
@interact(layout=dict(top=[['a2','b2','c2'],['a1','b1','c1'],['dV']]))
def _(
    dV = selector(['dz dy dx','dz dx dy','dx dy dz','dx dz dy','dy dx dz','dy dz dx'],buttons=False),
    a1=input_box(0,label='$a_{1}$',width=5),
    a2=input_box(2,label='$a_{2}$',width=5),
    b1=input_box((4-x^2),label='$b_{1}$',width=10),
    b2=input_box((4+x),label='$b_{2}$',width=10),
    c1=input_box(-x,label='$c_{1}$',width=15),
    c2=input_box(x+y,label='$c_{2}$',width=15)):
    
    b1 = b1 + 0*x
    b2 = b2 + 0*x
    c1 = c1 + 0*x
    c2 = c2 + 0*x
        
    var('u,v,w')
    def triple(u1,u2,v1,v2,w1,w2):
        vlow = min(v1.find_minimum_on_interval(u1,u2)[0],v2.find_minimum_on_interval(u1,u2)[0])
        vhigh= max(v1.find_maximum_on_interval(u1,u2)[0],v2.find_maximum_on_interval(u1,u2)[0])
        assume(u>u1,u<u2,v>vlow,v<vhigh)
        integ = integrate(1,w,w1,w2)
        integ = integrate(integ,v,v1,v2)
        integ = integrate(integ,u,u1,u2)
        forget(u>u1,u<u2,v>vlow,v<vhigh)
        return integ
    
  
    # need an update button so that a new collection of endpoints can be entered w/o having to recompute after each cell

    if dV == 'dz dy dx':
        integ = triple(a1,a2,b1(x=u),b2(x=u),c1(x=u,y=v),c2(x=u,y=v))
    elif dV == 'dz dx dy':
        integ = triple(a1,a2,b1(y=u),b2(y=u),c1(y=u,x=v),c2(y=u,x=v))
    elif dV == 'dx dz dy':
        integ = triple(a1,a2,b1(y=u),b2(y=u),c1(y=u,z=v),c2(y=u,z=v))
    elif dV == 'dx dy dz':
        integ = triple(a1,a2,b1(z=u),b2(z=u),c1(z=u,y=v),c2(z=u,y=v))
    elif dV == 'dy dx dz':
        integ = triple(a1,a2,b1(z=u),b2(z=u),c1(z=u,x=v),c2(z=u,x=v))
    else:   # dV == 'dy dz dx'
        integ = triple(a1,a2,b1(x=u),b2(x=u),c1(x=u,z=v),c2(x=u,z=v))

# Print the final integral out nicely with its computed value.  
    html('The volume of the indicated region is given by:')
    I1 = '\int_{%s'%str(a1)+'}^{%s}'%str(a2)
    I2 = '\int_{%s'%str(b1)+'}^{%s}'%str(b2)
    I3 = '\int_{%s'%str(c1)+'}^{%s}'%str(c2)
    html('<h3 align="middle">$'+I1+'$$'+I2+'$$'+I3+'$$'+str(dV)+' = %s</h3>'%str(integ))


##############  End of Sage Code ###################### 


##############  Necessary code for calling the single-cell server ##########

 </script>
 </div>

 <script type="text/javascript" src="http://sagemath.org:5467/static/jquery-1.5.min.js"></script>
 <script type="text/javascript" src="http://sagemath.org:5467/embedded_singlecell.js"></script> 

 <script type="text/javascript">
$(function() { // load only when the page is loaded
  var makecells = function() {
  singlecell.makeSinglecell({
      inputLocation: "#singlecell-test",
      editor: "codemirror",
      hide: ["editor","computationID","files","messages","sageMode"],
      evalButtonText: "Click to Start/Restart",
       replaceOutput: true});
 }

  singlecell.init(makecells); // load Single Cell libraries and then
                              // initialize Single Cell instances

  });
  </script>
EOF


############### End of the Sage specific code ####################### 

TEXT(MODES(TeX =>"",HTML=>EV3(<<'EOT')));

$PAR
Determine the order of integration and endpoints that give the volume of the region bounded by:
$BR $BR
\( 0 \leq z \leq y^2 \) ,  \( 0 \leq y \leq 3 \) and \( 0 \leq x \leq z+y \).
$PAR
\( V = \) \{ ans_rule(15) \} .

$PAR

$PAR
EOT

Context()->normalStrings;

ANS( Compute($volume)->cmp() );



ENDDOCUMENT();        # This should be the last executable line in the problem.
