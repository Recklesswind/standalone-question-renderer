{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"This isolates the features of webwork which simply render a problem, independent of any connection with a database or with a webserver","body":"standalone-question-renderer\r\n============================\r\n\r\nThis isolates the features of webwork which simply render a problem, independent of any connection with a database or with a webserver.\r\n\r\n## Required ##\r\n\r\n1. This application uses some extra modules from CPAN which may not be available in your local perl installation. \r\nThe script   `bin/check_modules.pl` will tell you \r\nwhich ones you are missing (for the full WW installation).  The file `bin/extras` lists the ones I needed to add to get this to work.  YMMV\r\n\r\n\r\n1. This example uses jsMath to display equations so you may need to have that installed to see the equations typeset.\r\n\r\n\r\nTo use\r\n--------\r\n\r\n(1) To see the generator in operation use these commands in the top directory:\r\n\r\n \trun_problem_generator.pl 1>tmp.html 2>warnings\r\n \topen tmp.html\r\n \r\n \r\n \r\nA lot of extraneous warnings are created.  I'll try to clean those up soon.\r\n\r\n\r\n(2) To generate data for input to the question-render\r\n\r\n\tcd clients\r\n\t./renderProblem2.pl input.txt\r\n\tls\r\nyou will see\r\n\r\n\tdata_server_to_client.txt\tinput.txt renderProblem2.pl\t\trenderProblemOutput1.html\r\n\t\r\nThe `data_server_to_client.txt` file contains the \r\ncode needed for input to the question renderer. Place it in the `data` directory.  The other files there show sample outputs created while building this application.\r\nThe `renderProblemOutput1.html` file is produced and fed\r\nto a browser.\r\n\r\nVariations\r\n----------\r\n\r\nThere are several different pretty print output formats\r\nthat can be chosen in `RenderProblem.pm`.  \r\n\r\nThe input and output files are currently hardwired in `renderProblem2.pl` and `RenderProblem.pm`\r\n\r\nTo Do\r\n--------------\r\n\r\n1. Track down the warnings and fix them. Many are warnings from PG macros.\r\n\r\n2. Continue to rework the configuration used in defineProblemEnvir  so that it is modular and can be adapted for both this stand alone generator and for a full fledged WeBWorK site.\r\n3. Make it easier to switch output formats and input files.\r\n4. Rename the client `renderProblem2.pl` to something less confusing.\r\n5. Look at the various \"2\" versions in particular `Local2.pm` and see if its possible to adapt them to use the standard `Local.pm` file -- possibly modifying the latter.\r\n6. Add the ability to handle images mode by adding a small database of some kind.\r\n\r\nProject\r\n------------\r\n\r\nPut a Ruby webserver front end on this so that the client\r\nsend a .pg file, have it rendered and returned to the client which pushes it through a browser.  The problem in the browser is active in the sense that if the submit button is pressed the entered answers are checked and a new version of the question with answers checked is returned to the browser.\r\n\r\nYou can use `https://hosted2.webwork.rochester.edu/` as a webserver for testing if you don't have a local host installed.\r\n\r\n\r\n\r\n \r\n\r\n\r\n ","name":"Standalone-question-renderer","google":""}